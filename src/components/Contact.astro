---

---

<section id="contact" class="section contact">
    <div class="container">
        <div class="contact-content">
            <div class="contact-text fade-in">
                <h2 class="section-title">
                    Get in <span class="gradient-text">Touch</span>
                </h2>
                <p class="propriety">
                    A proprietary of charms hospitality services.
                </p>
                <p class="contact-description">
                    Have questions or need support? We're here to help you make
                    the most of your party experience. Drop us a message and
                    we'll get back to you within 24 hours.
                </p>
                <div class="contact-info">
                    <div class="info-item">
                        <div class="info-icon">
                            <svg
                                width="24"
                                height="24"
                                viewBox="0 0 24 24"
                                fill="none"
                            >
                                <path
                                    d="M22 12A10 10 0 1 1 12 2a10 10 0 0 1 10 10Z"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    fill="none"></path>
                                <path
                                    d="M8 12l2 2 4-4"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    fill="none"></path>
                            </svg>
                        </div>
                        <div class="info-text">
                            <h4>Quick Response</h4>
                            <p>We respond within 24 hours</p>
                            <a href="tel:7870369666">+91 7870369666</a>
                        </div>
                    </div>
                    <div class="info-item">
                        <div class="info-icon">
                            <svg
                                width="24"
                                height="24"
                                viewBox="0 0 24 24"
                                fill="none"
                            >
                                <path
                                    d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    fill="none"></path>
                                <circle
                                    cx="12"
                                    cy="10"
                                    r="3"
                                    stroke="currentColor"
                                    stroke-width="2"
                                    fill="none"></circle>
                            </svg>
                        </div>
                        <div class="info-text">
                            <h4>Global Support</h4>
                            <p>Available worldwide</p>
                            <a
                                href="https://www.google.com/maps/search/3rd+Floor,+1A,+Bindal+Mall,+Marine+Dr+Rd,+Sonari,+Jamshedpur,+Jharkhand+831011/@22.8289164,86.1661611,14z/data=!3m1!4b1?entry=ttu&g_ep=EgoyMDI1MDcyMy4wIKXMDSoASAFQAw%3D%3D"
                                >3rd Floor, 1A, Bindal Mall, Marine Dr Rd,
                                Sonari, Jamshedpur, Jharkhand 831011</a
                            >
                        </div>
                    </div>
                </div>
            </div>
            <div class="contact-form-container fade-in">
                <div class="contact-form">
                    <form class="form" id="contactForm">
                        <div class="form-header">
                            <h3>Send us a message</h3>
                        </div>
                        <div class="form-content">
                            <div class="input-group">
                                <label>Full Name</label>
                                <input
                                    type="text"
                                    name="name"
                                    placeholder="Enter your full name"
                                    required
                                />
                            </div>
                            <div class="input-group">
                                <label>Email Address</label>
                                <input
                                    type="email"
                                    name="email"
                                    placeholder="Enter your email address"
                                    required
                                />
                            </div>
                            <div class="input-group">
                                <label>Subject</label>
                                <input
                                    type="text"
                                    name="subject"
                                    placeholder="What's this about?"
                                    required
                                />
                            </div>
                            <div class="input-group">
                                <label>Message</label>
                                <textarea
                                    name="message"
                                    placeholder="Tell us more about your inquiry..."
                                    rows="5"
                                    required></textarea>
                            </div>
                            <button type="submit" class="submit-btn">
                                <span class="btn-text">Send Message</span>
                                <span
                                    class="btn-loading"
                                    style="display: none;"
                                >
                                    <svg
                                        width="20"
                                        height="20"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                    >
                                        <circle
                                            cx="12"
                                            cy="12"
                                            r="10"
                                            stroke="currentColor"
                                            stroke-width="2"
                                            opacity="0.3"></circle>
                                        <path
                                            d="M2 12c0-5.523 4.477-10 10-10s10 4.477 10 10"
                                            stroke="currentColor"
                                            stroke-width="2"
                                            stroke-linecap="round"
                                        >
                                            <animateTransform
                                                attributeName="transform"
                                                type="rotate"
                                                values="0 12 12;360 12 12"
                                                dur="1s"
                                                repeatCount="indefinite"
                                            ></animateTransform>
                                        </path>
                                    </svg>
                                    Sending...
                                </span>
                            </button>
                        </div>
                    </form>

                    <!-- Success/Error Messages -->
                    <div
                        id="formMessage"
                        class="form-message"
                        style="display: none;"
                    >
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    .contact {
        background: var(--secondary-dark);
        position: relative;
        padding: 100px 0;
        min-height: 100vh;
    }

    .contact::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: radial-gradient(
            circle at 30% 70%,
            rgba(212, 175, 55, 0.1) 0%,
            transparent 70%
        );
        pointer-events: none;
    }

    :root {
        --primary-gold: #d4af37;
        --secondary-dark: #0f0f0f;
        --tertiary-dark: #1a1a1a;
        --dark-bg: #0a0a0a;
        --text-light: #ffffff;
        --text-muted: #b0b0b0;
        --gradient-primary: linear-gradient(135deg, #d4af37 0%, #f4e19c 100%);
        --shadow-gold: 0 20px 40px rgba(212, 175, 55, 0.3);
        --shadow-dark: 0 20px 40px rgba(0, 0, 0, 0.5);
        --success-color: #10b981;
        --error-color: #ef4444;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: "Inter", sans-serif;
        background: var(--secondary-dark);
        color: var(--text-light);
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 20px;
    }

    .contact-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 80px;
        align-items: center;
        position: relative;
        z-index: 1;
    }

    .section-title {
        font-family: "Playfair Display", serif;
        font-size: clamp(2rem, 4vw, 3rem);
        font-weight: 700;
        margin-bottom: 24px;
        color: var(--text-light);
    }

    .gradient-text {
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .fade-in {
        animation: fadeInUp 0.8s ease-out;
    }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .contact-description {
        font-size: 1.1rem;
        color: var(--text-muted);
        line-height: 1.8;
        margin-bottom: 40px;
    }

    .contact-info {
        display: flex;
        flex-direction: column;
        gap: 24px;
    }

    .info-item {
        display: flex;
        /* align-items: center; */
        gap: 16px;
    }

    .info-icon {
        color: var(--primary-gold);
        flex-shrink: 0;
    }

    .info-text h4 {
        color: var(--text-light);
        font-size: 1.1rem;
        margin-bottom: 4px;
    }

    .info-text p {
        color: var(--text-muted);
        font-size: 0.9rem;
    }
    .info-text a {
        color: var(--primary-gold);
        text-decoration: none;
        font-weight: 500;
        font-size: 0.9rem;
    }

    .contact-form-container {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .propriety {
        font-size: 1.1rem;
        color: var(--text-muted);
        line-height: 1.8;
        margin-bottom: 5px;
    }
    .contact-form {
        width: 100%;
        max-width: 500px;
        background: var(--dark-bg);
        border-radius: 24px;
        padding: 40px;
        box-shadow: var(--shadow-dark);
        border: 2px solid var(--primary-gold);
    }

    .form-header h3 {
        font-family: "Playfair Display", serif;
        font-size: 1.8rem;
        color: var(--primary-gold);
        margin-bottom: 32px;
        text-align: center;
    }

    .input-group {
        margin-bottom: 24px;
    }

    .input-group label {
        display: block;
        color: var(--text-muted);
        font-size: 0.9rem;
        margin-bottom: 8px;
        font-weight: 500;
    }

    .input-group input,
    .input-group textarea {
        width: 100%;
        padding: 12px 16px;
        background: transparent;
        border: 1px solid var(--text-muted);
        border-radius: 8px;
        color: var(--text-light);
        font-size: 0.9rem;
        font-family: "Inter", sans-serif;
        transition: border-color 0.3s ease;
    }

    .input-group input:focus,
    .input-group textarea:focus {
        outline: none;
        border-color: var(--primary-gold);
    }

    .input-group input::placeholder,
    .input-group textarea::placeholder {
        color: var(--text-muted);
        opacity: 0.7;
    }

    .input-group textarea {
        resize: vertical;
        min-height: 120px;
    }

    .submit-btn {
        width: 100%;
        padding: 16px;
        background: var(--gradient-primary);
        border: none;
        border-radius: 12px;
        color: var(--dark-bg);
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        margin-top: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

    .submit-btn:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: var(--shadow-gold);
    }

    .submit-btn:disabled {
        opacity: 0.7;
        cursor: not-allowed;
        transform: none;
    }

    .btn-loading {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .form-message {
        margin-top: 20px;
        padding: 16px;
        border-radius: 8px;
        font-size: 0.9rem;
        text-align: center;
        animation: slideIn 0.3s ease;
    }

    .form-message.success {
        background: rgba(16, 185, 129, 0.1);
        color: var(--success-color);
        border: 1px solid var(--success-color);
    }

    .form-message.error {
        background: rgba(239, 68, 68, 0.1);
        color: var(--error-color);
        border: 1px solid var(--error-color);
    }

    @keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @media (max-width: 1024px) {
        .contact-content {
            grid-template-columns: 1fr;
            gap: 50px;
            text-align: center;
        }

        .contact-info {
            align-items: center;
        }

        .info-item {
            justify-content: center;
        }
    }

    @media (max-width: 768px) {
        .contact {
            padding: 60px 0;
        }

        .contact-form {
            padding: 30px 20px;
        }

        .form-header h3 {
            font-size: 1.5rem;
        }

        .contact-info {
            gap: 20px;
        }
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const formElement = document.getElementById("contactForm");

        // Type guard to ensure we have an HTMLFormElement
        if (!formElement || !(formElement instanceof HTMLFormElement)) {
            console.error("Contact form not found or is not a form element");
            return;
        }

        const form = formElement; // Now TypeScript knows this is HTMLFormElement
        const submitBtn = form.querySelector(".submit-btn");
        const btnText = submitBtn?.querySelector(".btn-text");
        const btnLoading = submitBtn?.querySelector(".btn-loading");
        const formMessage = document.getElementById("formMessage");

        // Early return if essential elements are missing
        if (!submitBtn || !btnText || !btnLoading || !formMessage) {
            console.error("Required form elements not found");
            return;
        }

        form.addEventListener("submit", async function (e) {
            e.preventDefault();

            // Get form data
            const formData = new FormData(form);
            const data = {
                name: formData.get("name"),
                email: formData.get("email"),
                subject: formData.get("subject"),
                message: formData.get("message"),
            };

            // Show loading state
            (submitBtn as HTMLButtonElement).disabled = true;
            (btnText as HTMLElement).style.display = "none";
            (btnLoading as HTMLElement).style.display = "flex";
            hideMessage();

            try {
                // Send to your API endpoint
                const response = await fetch("/api/contact", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(data),
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    showMessage(
                        "Thank you! Your message has been sent successfully. We'll get back to you within 24 hours.",
                        "success",
                    );
                    form.reset(); // Now this works because form is HTMLFormElement
                } else {
                    showMessage(
                        result.message ||
                            "Failed to send message. Please try again.",
                        "error",
                    );
                }
            } catch (error) {
                console.error("Error:", error);
                showMessage(
                    "An error occurred. Please try again later.",
                    "error",
                );
            } finally {
                // Reset button state
                (submitBtn as HTMLButtonElement).disabled = false;
                (btnText as HTMLElement).style.display = "block";
                (btnLoading as HTMLElement).style.display = "none";
            }
        });

        function showMessage(message: string, type: string) {
            if (!formMessage) return;

            formMessage.textContent = message;
            formMessage.className = `form-message ${type}`;
            formMessage.style.display = "block";

            // Auto-hide success messages after 5 seconds
            if (type === "success") {
                setTimeout(() => {
                    hideMessage();
                }, 5000);
            }
        }

        function hideMessage() {
            if (!formMessage) return;
            formMessage.style.display = "none";
        }
    });
</script>
